load_module "modules/ngx_http_image_filter_module.so";

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}

http {
  proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=image_resize_cache:10M max_size=100M inactive=40d;

  server {
    charset UTF-8;
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    location ~* ^/images/(full|thumbs)(.*) {
      set $s3_bucket        's3.eu-central-1.amazonaws.com/${IMAGE_STORAGE_NAME}';
      set $url_image        '$1$2';
      set $width -;
      set $height -;

      if ($args ~ width=([0-9]+)) {
        set $width $1;
      }

      if ($args ~ height=([0-9]+)) {
        set $height $1;
      }

      image_filter_buffer 20M;
      image_filter_jpeg_quality 75;
      image_filter_interlace on;
      image_filter resize $width $height;

      resolver               ${DNS_SERVER} valid=300s;
      resolver_timeout       10s;

      proxy_pass             https://$s3_bucket/$url_image?;
      proxy_cache image_resize_cache;
      proxy_cache_key "$proxy_host$uri$is_args$args";
      proxy_cache_valid 30d;
      proxy_cache_lock on;
      proxy_cache_use_stale error invalid_header timeout updating;
      proxy_http_version 1.1;
      expires 30d;
    }

    location ~* ^/audio/files/(.*) {
      set $s3_bucket        's3.eu-central-1.amazonaws.com/${AUDIO_STORAGE_NAME}';
      set $url_image        '$1';

      resolver               ${DNS_SERVER} valid=300s;
      resolver_timeout       10s;

      proxy_pass             https://$s3_bucket/$url_image;
    }

    set $documentation_container 'http://${API_SERVER_IP}:30000';
    set $article_container 'http://${API_SERVER_IP}:30002';
    set $images_container 'http://${API_SERVER_IP}:30001';
    set $packages_container 'http://${API_SERVER_IP}:30003';
    set $udir_proxy_container 'http://${API_SERVER_IP}:30004';
    set $h5p_container 'http://${API_SERVER_IP}:30005';
    set $auth_container 'http://${API_SERVER_IP}:30006';
    set $kong_container 'http://${API_SERVER_IP}:8000';
    set $learningpath_frontend_container 'http://${API_SERVER_IP}:30007';
    set $learningpath_api_container 'http://${API_SERVER_IP}:30008';
    set $oembed_proxy_container 'http://${API_SERVER_IP}:30009';
    set $test_clients_container 'http://${API_SERVER_IP}:30010';
    set $article_oembed_container 'http://${API_SERVER_IP}:30011';
    set $audio_container 'http://${API_SERVER_IP}:30014';

    set $taxonomy_endpoint 'http://ndla-taxonomy-dev.eu-central-1.elasticbeanstalk.com';

    # Need to set environment-variable to nginx variable to be able to use them in if statements.
    set $location_article_enabled ${LOCATION_ARTICLE_ENABLED};
    set $location_udir_enabled ${LOCATION_UDIR_ENABLED};
    set $location_h5p_enabled ${LOCATION_H5P_ENABLED};
    set $location_packages_enabled ${LOCATION_PACKAGES_ENABLED};
    set $location_auth_enabled ${LOCATION_AUTH_ENABLED};
    set $location_kong_enabled ${LOCATION_KONG_ENABLED};
    set $location_learningpath_frontend_enabled ${LOCATION_LEARNINGPATH_FRONTEND_ENABLED};
    set $location_learningpath_api_enabled ${LOCATION_LEARNINGPATH_API_ENABLED};
    set $location_oembed_proxy_enabled ${LOCATION_OEMBED_PROXY_ENABLED};
    set $location_test_clients_enabled ${LOCATION_TEST_CLIENTS_ENABLED};
    set $location_article_oembed_enabled ${LOCATION_ARTICLE_OEMBED_ENABLED};
    set $location_audio_enabled ${LOCATION_AUDIO_ENABLED};

    location ~* ^/health$ {
        add_header 'Content-Length' 0;
        return 200;
    }

    location /api-docs/articles {
      if ($location_article_enabled != "true") {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $article_container/api-docs/articles;
    }

    location /api-docs/images {
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $images_container/api-docs/images;
    }

    location /api-docs/udir {
      if ($location_udir_enabled != "true") {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $udir_proxy_container/api-docs/udir;
    }

    location /api-docs/h5p {
      if ($location_h5p_enabled != "true") {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $h5p_container/api-docs/h5p;
    }

    location /api-docs/learningpaths {
      if ($location_learningpath_api_enabled != "true") {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $learningpath_api_container/api-docs/learningpaths;
    }

    location /api-docs/oembed {
      if ($location_oembed_proxy_enabled != "true") {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $oembed_proxy_container/api-docs/oembed;
    }

    location /api-docs/audio {
      if ($location_audio_enabled != "true") {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $audio_container/api-docs/audio;
    }

    location ~* ^/article-oembed(.*) {
      if ($location_article_oembed_enabled != "true") {
        return 404;
      }

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,app-key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $article_oembed_container/article-oembed$1$is_args$args;
    }

    location ~* ^/taxonomy(.*) {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,app-key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      resolver ${DNS_SERVER} valid=300s;
      resolver_timeout  10s;

      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $taxonomy_endpoint/$1$is_args$args;
    }

    location ~* ^/articles(.*) {
      if ($location_article_enabled != "true") {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $article_container/articles$1$is_args$args;
    }

    location ~* ^/images(.*) {
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $images_container/images$1$is_args$args;
    }

    location ~* ^/packages(.*) {
      if ($location_packages_enabled != true) {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $packages_container/packages$1$is_args$args;
    }

    location ~* ^/udir(.*) {
      if ($location_udir_enabled != true) {
            return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $udir_proxy_container/udir$1$is_args$args;
    }

    location ~* ^/auth/login(.*) {
      if ($location_auth_enabled != true) {
            return 404;
      }

      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,app-key';
      add_header 'Access-Control-Max-Age' 1728000;

      if ($request_method = 'OPTIONS') {
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $auth_container/auth/login$1$is_args$args;
    }

    location ~* ^/auth(.*) {
      if ($location_kong_enabled != true) {
        return 404;
      }

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,app-key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_pass $kong_container/auth$1$is_args$args;
    }

    location ~* ^/h5p(.*) {
      if ($location_h5p_enabled != true) {
        return 404;
      }
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $h5p_container/h5p$1$is_args$args;

    }

    location ~* ^/test-clients(.*) {
      if ($location_test_clients_enabled != "true") {
        return 404;
      }

      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $test_clients_container;
    }


    location ~* ^/learningpaths(.*) {
      if ($location_learningpath_api_enabled != "true") {
        return 404;
      }

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,app-key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $kong_container/learningpaths$1$is_args$args;
    }

    location ~* ^/oembed(.*) {
      if ($location_oembed_proxy_enabled != "true") {
        return 404;
      }

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,app-key';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $kong_container/oembed$1$is_args$args;
    }

    location ~* ^/audio(.*) {
      if ($location_audio_enabled != "true") {
        return 404;
      }

      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $audio_container/audio$1$is_args$args;
    }

    location / {
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass $documentation_container;
    }
  }
}
